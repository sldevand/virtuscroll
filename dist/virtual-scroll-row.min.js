export default class VirtualScrollRow extends HTMLElement { constructor(t) { super(), this.root = this.attachShadow({ mode: "open" }), this.wrapper = document.createDocumentFragment(), this.data = t } buildStyle() { return "\n        <style>\n            :host {\n                padding: 20px;\n                display: grid;\n                grid-template-columns: 1fr 6fr repeat(2, 1fr);\n                grid-auto-rows: auto;\n                align-items:center;\n                text-align:center;\n                border-bottom: solid;\n            }\n        </style>\n        " } connectedCallback() { this.root.innerHTML = this.buildStyle(), this.setData(this.data), this.root.appendChild(this.wrapper) } setData(t) { this.data = t, this.clear(), this.render() } clear() { Array.from(this.wrapper.children).forEach((t => t.remove())) } render() { for (const t in this.data) if (Object.hasOwnProperty.call(this.data, t)) { let e = document.createElement("span"); e.innerText = this.data[t], this.wrapper.appendChild(e) } } } customElements.define("virtual-scroll-row", VirtualScrollRow);